// Package p contains an HTTP Cloud Function.
package p

import (
	"encoding/json"
	"fmt"
	"io"
	"log"
	"net/http"

	"example.com/module/info"
	"example.com/module/message"
)

// Extracts the message body for a domain as json and returns
func Handler(w http.ResponseWriter, r *http.Request) {
	// Set CORS headers for the main request.
	w.Header().Set("Access-Control-Allow-Origin", "*")

	message_body := &message.Message{}
	return_info := &info.Info_AutoGenerated{}
	if err := json.NewDecoder(r.Body).Decode(&message_body); err != nil {
		switch err {
		case io.EOF:
			http.Error(w, http.StatusText(http.StatusInternalServerError), http.StatusInternalServerError)
			return
		default:
			log.Printf("json.NewDecoder: %v", err)
			http.Error(w, http.StatusText(http.StatusBadRequest), http.StatusBadRequest)
			return
		}
	}

	return_info.ObtainResults(message_body.Domain)
	results, err := return_info.GenerateResults()

	if err != nil {
		log.Printf("%v", err)
		http.Error(w, http.StatusText(http.StatusInternalServerError), http.StatusInternalServerError)
		return
	}

	fmt.Fprint(w, results)
	return
}
